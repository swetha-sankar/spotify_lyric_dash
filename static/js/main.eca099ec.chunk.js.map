{"version":3,"sources":["config.js","hash.js","components/CurrentSong.js","App.js","reportWebVitals.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","CurrentSong","props","options","apiKey","process","title","name","artist","artists","optimizeQuery","useState","lyrics","setLyrics","getLyrics","then","className","src","album","images","url","alt","is_playing","App","state","token","no_data","getCurrentSong","bind","tick","_token","access_token","this","setState","interval","setInterval","clearInterval","$","type","beforeSend","xhr","setRequestHeader","success","data","href","join","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eca099ec.chunk.js","sourcesContent":["/**\r\n * Swetha Sankar\r\n * https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\r\n */\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nexport const clientId = \"ccab3dc5e39240cea3dfe5a16fd204a5\";\r\nexport const redirectUri = \"https://swetha-sankar.github.io/spotify_lyric_dash/\";\r\nexport const scopes = [\r\n    \"user-top-read\",\r\n    \"user-read-currently-playing\",\r\n    \"user-read-playback-state\",\r\n];","/**\r\n * Swetha Sankar\r\n * https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\r\n */\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","/**\r\n * Swetha Sankar\r\n * Displays current song, album art, artist, and lyrics\r\n */\r\n// React hooks\r\nimport React, {useState} from \"react\";\r\nimport {getLyrics} from 'genius-lyrics-api';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst CurrentSong = props => {\r\n    // Making API request to genius lyrics\r\n    const options = {\r\n        apiKey: API_KEY,\r\n        title: props.item.name,\r\n        artist: props.item.artists[0]['name'],\r\n        optimizeQuery: true\r\n    };\r\n    // Using genius lyrics library to simplify request (https://github.com/farshed/genius-lyrics-api)\r\n    const [lyrics, setLyrics] = useState(null);\r\n    // Store the promise in the data\r\n    getLyrics(options).then((lyrics) => setLyrics(lyrics));\r\n\r\n    // Format the music page (use Bulma tile to put everything from left to right)\r\n    return (\r\n        <div>\r\n            <div className='tile'>\r\n                <div className='tile is-parent is-vertical'>\r\n                    <div className='image is-size-5'>\r\n                        <img src={props.item.album.images[0].url} alt={props.item.name}/>\r\n                    </div>\r\n                    <div className='titlestyle'>\r\n                        <div className='subheader'>\r\n                            {props.is_playing ? \"Now Playing: \" : \"Paused: \"}\r\n                        </div>\r\n                        {props.item.name}\r\n                        <br/>\r\n                        <div className='subheader'>\r\n                            {props.item.artists[0].name}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                </div>\r\n                <div className='tile is-child'>\r\n                <pre className='lyricstyle'>\r\n            {lyrics}\r\n            </pre>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentSong;","import React, {Component} from 'react';\nimport {authEndpoint, clientId, redirectUri, scopes} from \"./config\";\nimport hash from \"./hash\";\nimport * as $ from \"jquery\";\nimport CurrentSong from \"./components/CurrentSong\";\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: null,\n            item: {\n                album: {\n                    images: [{url: \"\"}]\n                },\n                name: \"\",\n                artists: [{name: \"\"}],\n            },\n            is_playing: \"Paused\",\n            no_data: false,\n        };\n\n        this.getCurrentSong = this.getCurrentSong.bind(this);\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n        let _token = hash.access_token;\n\n        if (_token) {\n            this.setState({\n                token: _token\n            });\n            this.getCurrentSong(_token);\n        }\n        this.interval = setInterval(() => this.tick(), 10000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    tick() {\n        if (this.state.token) {\n            this.getCurrentSong(this.state.token);\n        }\n    }\n\n\n    getCurrentSong(token) {\n        // Uses Spotify API to determine current song playing\n        $.ajax({\n            url: \"https://api.spotify.com/v1/me/player\",\n            type: \"GET\",\n            beforeSend: xhr => {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n            },\n            success: data => {\n                if (!data) {\n                    this.setState({\n                        no_data: true,\n                    });\n                    return;\n                }\n                this.setState({\n                    item: data.item,\n                    is_playing: data.is_playing,\n                    no_data: false\n                });\n            }\n        });\n    }\n\n\n    render() {\n        return (\n            <div className = \"App\">\n                <header className = \"App-header\">\n                    {!this.state.token && (\n                        <a\n                            className=\"startbtn\"\n                            href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                                \"%20\"\n                            )}&response_type=token&show_dialog=true`}\n                        >\n                            Login to Spotify\n                        </a>\n\n                    )}\n                    {this.state.token && !this.state.no_data && (\n                        <CurrentSong\n                            item={this.state.item}\n                            is_playing={this.state.is_playing}\n                        />\n                        ) }\n\n                    {this.state.no_data && (\n                        <p className = 'titlestyle'>\n                            Nothing currently playing\n                        </p>\n                    )}\n                    </header>\n\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}